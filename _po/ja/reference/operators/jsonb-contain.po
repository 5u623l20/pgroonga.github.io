msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2015-10-25 15:28+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"@> operator\"\n"
"---"
msgstr ""
"---\n"
"title: \"@>演算子\"\n"
"---"

msgid "# `@>` operator"
msgstr "# `@>`演算子"

msgid "## Summary"
msgstr "## 概要"

msgid "PGroonga supports fast index search by `@>` operator."
msgstr "PGroongaは`@>`演算子の検索をインデックスを使って高速に実現できます。"

msgid ""
"[`@>` operator is a built-in PostgreSQL operator](https://www.postgresql.org/d"
"ocs/{{ site.postgresql_short_version }}/static/functions-json.html#FUNCTIONS-J"
"SONB-OP-TABLE). `@>` operator returns true when the right hand side `jsonb` ty"
"pe value is a subset of left hand side `jsonb` type value."
msgstr ""
"[`@>`演算子はPostgreSQL組み込みの演算子](http://www.postgresql.jp/document/{{ site.postgre"
"sql_short_version }}/html/functions-json.html#FUNCTIONS-JSONB-OP-TABLE)です。`@>`"
"演算子は右辺の`jsonb`型の値が左辺の`jsonb`型の値のサブセットなら真を返します。"

msgid "## Syntax"
msgstr "## 構文"

msgid "Here is the syntax of this operator:"
msgstr "この演算子の構文は次の通りです。"

msgid ""
"```sql\n"
"jsonb_column @> jsonb_query\n"
"```"
msgstr ""

msgid "`jsonb_column` is a column that its type is `jsonb`."
msgstr "`jsonb_column`は`jsonb`型のカラムです。"

msgid "`jsonb_query` is a `jsonb` type value used as query."
msgstr "`jsonb_query`はクエリーとして使う`jsonb`型の値です。"

msgid ""
"The operator returns `true` when `jsonb_query` is a subset of `jsonb_column` v"
"alue, `false` otherwise."
msgstr "この演算子は`jsonb_query`が`jsonb_column`の値のサブセットなら`true`を返し、そうでない場合は`false`を返します。"

msgid "## Usage"
msgstr "## 使い方"

msgid "Here are sample schema and data for examples:"
msgstr "例に使うサンプルスキーマとデータは次の通りです。"

msgid ""
"```sql\n"
"CREATE TABLE logs (\n"
"  record jsonb\n"
");"
msgstr ""

msgid "CREATE INDEX pgroonga_logs_index ON logs USING pgroonga (record);"
msgstr ""

msgid ""
"INSERT INTO logs\n"
"     VALUES ('{\n"
"                \"message\": \"Server is started.\",\n"
"                \"host\":    \"www.example.com\",\n"
"                \"tags\": [\n"
"                  \"web\",\n"
"                  \"example.com\"\n"
"                ]\n"
"              }');\n"
"INSERT INTO logs\n"
"     VALUES ('{\n"
"                \"message\": \"GET /\",\n"
"                \"host\":    \"www.example.com\",\n"
"                \"code\":    200,\n"
"                \"tags\": [\n"
"                  \"web\",\n"
"                  \"example.com\"\n"
"                ]\n"
"              }');\n"
"INSERT INTO logs\n"
"     VALUES ('{\n"
"                \"message\": \"Send to <info@example.com>.\",\n"
"                \"host\":    \"mail.example.net\",\n"
"                \"tags\": [\n"
"                  \"mail\",\n"
"                  \"example.net\"\n"
"                ]\n"
"              }');\n"
"```"
msgstr ""

msgid "Disable sequential scan:"
msgstr "シーケンシャルスキャンを無効にします。"

msgid ""
"```sql\n"
"SET enable_seqscan = off;\n"
"```"
msgstr ""

msgid "Here is an example for match case:"
msgstr "マッチする例は次の通りです。"

msgid ""
"(It uses [`jsonb_pretty()` function](https://www.postgresql.org/docs/devel/sta"
"tic/functions-json.html#FUNCTIONS-JSON-PROCESSING-TABLE) provided since Postgr"
"eSQL 9.5 for readability.)"
msgstr ""
"（読みやすくするためにPostgreSQL 9.5以降で使える[`jsonb_pretty()`関数](http://www.postgresql.jp/d"
"ocument/current/html/functions-json.html#FUNCTIONS-JSON-PROCESSING-TABLE)を使ってい"
"ます。）"

msgid ""
"```sql\n"
"SELECT jsonb_pretty(record) FROM logs WHERE record @> '{\"host\": \"www.example.c"
"om\"}'::jsonb;\n"
"--             jsonb_pretty             \n"
"-- -------------------------------------\n"
"--  {                                  +\n"
"--      \"host\": \"www.example.com\",     +\n"
"--      \"tags\": [                      +\n"
"--          \"web\",                     +\n"
"--          \"example.com\"              +\n"
"--      ],                             +\n"
"--      \"message\": \"Server is started.\"+\n"
"--  }\n"
"--  {                                  +\n"
"--      \"code\": 200,                   +\n"
"--      \"host\": \"www.example.com\",     +\n"
"--      \"tags\": [                      +\n"
"--          \"web\",                     +\n"
"--          \"example.com\"              +\n"
"--      ],                             +\n"
"--      \"message\": \"GET /\"             +\n"
"--  }\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid "Here is an example for not match case."
msgstr "マッチしない例は次の通りです。"

msgid ""
"If you use an array in the search condition `jsonb` type value, all elements m"
"ust be included in the search target `jsonb` type value. Position of element i"
"sn't cared. If there are one or more elements that are included in the search "
"condition `jsonb` type value but aren't included in the search target `jsonb` "
"type value, record that have the search target `jsonb` type value isn't matche"
"d."
msgstr ""
"検索条件の`jsonb`型の値で配列を使った場合、検索対象の`jsonb`型の値にすべての要素が含まれていなければいけません。要素の順番は問いません。もし、"
"検索条件の`jsonb`型の値の要素のうち、1つでも検索対象の`jsonb`型の値に含まれていない要素があればそのレコードはマッチしません。"

msgid ""
"In the following example, there are records that have only `\"mail\"` or `\"web\"`"
" but there are no records that have both `\"mail\"` and `\"web\"`. So the followin"
"g `SELECT` returns no record:"
msgstr ""
"以下の例では、`\"mail\"`または`\"web\"`を含むレコードはありますが、`\"mail\"`と`\"web\"`両方を含むレコードはありません。そのため、次の"
"`SELECT`は1つもレコードを返しません。"

msgid ""
"```sql\n"
"SELECT jsonb_pretty(record) FROM logs WHERE record @> '{\"tags\": [\"mail\", \"web\""
"]}'::jsonb;\n"
"--  jsonb_pretty \n"
"-- --------------\n"
"-- (0 rows)\n"
"```"
msgstr ""

msgid "## See also"
msgstr "## 参考"

msgid ""
"  * [`jsonb` support](../jsonb.html)\n"
"  * [`@@` operator](jsonb-query.html)"
msgstr ""
"  * [`jsonb`サポート](../jsonb.html)\n"
"  * [`@@`演算子](jsonb-query.html)"
