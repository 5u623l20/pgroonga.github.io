msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2015-10-25 22:00+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: LIKE operator\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: LIKE演算子\n"
"layout: ja\n"
"---"

msgid "# `LIKE` operator"
msgstr "# `LIKE`演算子"

msgid ""
"PGroonga converts `column LIKE '%KEYWORD%'` condition to `column %% 'KEYWORD'`"
" internally. [`%%` operator](match.html) does full text search with index. It'"
"s fast rather than `LIKE` operator without index."
msgstr ""
"PGroongaは内部的に`column LIKE '%キーワード%'`条件を`column %% 'キーワード'`条件に変換します。[`%%`演算子](m"
"atch.html)はインデックスを使って全文検索をします。これはインデックスを使わない`LIKE`演算子より速いです。"

msgid ""
"Both beginning `%` and ending `%` are important. `'KEYWORD%'`, `'%KEYWORD'` an"
"d so on aren't converted to `column %% 'KEYWORD'`. PGroonga returns no records"
" for these patterns. Because PGroonga can't search these patterns with index."
msgstr ""
"最初の`%`と最後の`%`はどちらも重要です。`'キーワード%'`、`'%キーワード'`などは`column %% 'キーワード'`に変換されます。このよう"
"なパターンを指定するとPGroongaは1件もレコードを返しません。なぜならPGroongaはインデックスなしではこれらのパターンを検索できないからです。"

msgid ""
"The original `LIKE` operator searches against text as is. But `%%` operator do"
"es full text search against normalized text. It means that search result of `L"
"IKE` operator with index and search result of the original `LIKE` operator may"
" be different."
msgstr ""
"元の`LIKE`演算子は対象テキストに対して検索します。しかし、`%%`演算子は正規化したテキストに対して検索します。これは、インデックスを使った`LIKE"
"`演算子の検索結果と、元の`LIKE`演算子の検索結果は異なるということです。"

msgid ""
"For example, the original `LIKE` operator searches with case sensitive. But `L"
"IKE` operator with index searches with case insensitive."
msgstr "たとえば、元の`LIKE`演算子は大文字小文字を区別して検索します。しかし、インデックスを使った`LIKE`演算子は大文字小文字を区別しません。"

msgid "Here are sample schema and data:"
msgstr ""

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_content_index ON memos USING pgroonga (content);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQL is a relational database management s"
"ystem.');\n"
"INSERT INTO memos VALUES (2, 'Groonga is a fast full text search engine that s"
"upports all languages.');\n"
"INSERT INTO memos VALUES (3, 'PGroonga is a PostgreSQL extension that uses Gro"
"onga as index.');\n"
"INSERT INTO memos VALUES (4, 'There is groonga command.');\n"
"```"
msgstr ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQLはリレーショナル・データベース管理システムです。');\n"
"INSERT INTO memos VALUES (2, 'Groongaは日本語対応の高速な全文検索エンジンです。');\n"
"INSERT INTO memos VALUES (3, 'PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です"
"。');\n"
"INSERT INTO memos VALUES (4, 'groongaコマンドがあります。');\n"
"```"

msgid "A search result of the original `LIKE` operator:"
msgstr "元の`LIKE`演算子の結果です。"

msgid ""
"```sql\n"
"SET enable_seqscan = on;\n"
"SET enable_indexscan = off;\n"
"SET enable_bitmapscan = off;"
msgstr ""

msgid ""
"SELECT * FROM memos WHERE content LIKE '%groonga%';\n"
"--  id |          content          \n"
"-- ----+---------------------------\n"
"--   4 | There is groonga command.\n"
"-- (1 row)\n"
"```"
msgstr ""
"SELECT * FROM memos WHERE content LIKE '%groonga%';\n"
"--  id |           content           \n"
"-- ----+-----------------------------\n"
"--   4 | groongaコマンドがあります。\n"
"-- (1 row)\n"
"```"

msgid "A search result of `LIKE` operator with index:"
msgstr "インデックスを使った`LIKE`演算子の結果です。"

msgid ""
"```sql\n"
"SET enable_seqscan = off;\n"
"SET enable_indexscan = on;\n"
"SET enable_bitmapscan = on;"
msgstr ""

msgid ""
"SELECT * FROM memos WHERE content LIKE '%groonga%';\n"
"--  id |                                content                               "
"  \n"
"-- ----+----------------------------------------------------------------------"
"--\n"
"--   2 | Groonga is a fast full text search engine that supports all languages"
".\n"
"--   3 | PGroonga is a PostgreSQL extension that uses Groonga as index.\n"
"--   4 | There is groonga command.\n"
"-- (3 rows)\n"
"```"
msgstr ""
"SELECT * FROM memos WHERE content LIKE '%groonga%';\n"
"--  id |                                  content                             "
"     \n"
"-- ----+----------------------------------------------------------------------"
"-----\n"
"--   2 | Groongaは日本語対応の高速な全文検索エンジンです。\n"
"--   3 | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\n"
"--   4 | groongaコマンドがあります。\n"
"-- (3 rows)\n"
"```"

msgid ""
"If you want to get the same result by both `LIKE` operator with index and the "
"original `LIKE` operator, use the following tokenizer and normalizer:"
msgstr "インデックスを使った`LIKE`演算子の結果と元の`LIKE`演算子の結果を同じにしたい場合は次のトークナイザーとノーマライザーを使います。"

msgid ""
"  * Tokenizer: `TokenBigramSplitSymbolAlphaDigit`\n"
"  * Normalizer: None"
msgstr ""
"  * トークナイザー: `TokenBigramSplitSymbolAlphaDigit`\n"
"  * ノーマライザー: なし"

msgid "Here is a concrete example:"
msgstr "具体例は次の通りです。"

msgid ""
"```sql\n"
"DROP INDEX IF EXISTS pgroonga_content_index;"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_content_index\n"
"          ON memos\n"
"       USING pgroonga (content)\n"
"        WITH (tokenizer='TokenBigramSplitSymbolAlphaDigit',\n"
"              normalizer='');\n"
"```"
msgstr ""

msgid ""
"You can get the same result as the original `LIKE` operator with `LIKE` operat"
"or with index:"
msgstr "元の`LIKE`演算子とインデックスを使った`LIKE`演算子で同じ結果が返ります。"

msgid ""
"Normally, the default configuration returns better result for full text search"
" rather than the original `LIKE` operator. Think about which result is better "
"for users before you change the default configuration."
msgstr ""
"通常、デフォルトの設定は元の`LIKE`演算子よりも適切な全文検索結果を返す設定です。もし、デフォルトの設定をするときは、変更する前にユーザーにとてどのよう"
"な結果が適切かを考えてください。"

msgid ""
"See [Customization in `CREATE INDEX USING pgroonga`](../create-index-using-pgr"
"oonga.html#customization) for tokenizer and normalizer."
msgstr ""
"トークナイザーとノーマライザーをカスタマイズする方法については[`CREATE INDEX USING pgroonga`のカスタマイズ](../creat"
"e-index-using-pgroonga.html#customization)を参照してください。"
